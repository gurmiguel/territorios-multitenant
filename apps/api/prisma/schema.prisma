// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"

  moduleFormat = "cjs"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Congregation {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String   @unique @default("")
  createdAt DateTime @default(now())

  users     User[]
  Territory Territory[]
}

model Territory {
  id     Int     @id @default(autoincrement())
  number String  @unique
  color  String
  hidden Boolean
  map    String?

  congregation   Congregation @relation(fields: [congregationId], references: [id])
  congregationId Int

  streets Street[]
}

model Street {
  id   Int    @id @default(autoincrement())
  name String

  territory   Territory @relation(fields: [territoryId], references: [id])
  territoryId Int

  houses House[]
}

model House {
  id          Int      @id @default(autoincrement())
  type        String
  number      String
  complement  String
  observation String
  phones      String[] @default([])

  street   Street @relation(fields: [streetId], references: [id])
  streetId Int

  updates StatusUpdate[]
}

model StatusUpdate {
  id     String   @id @default(ulid())
  date   DateTime
  /// ["OK" | "Fail"]
  status String

  user    User   @relation(fields: [userId], references: [id])
  userId  String
  house   House  @relation(fields: [houseId], references: [id])
  houseId Int
}

// Auth specific models
model AccountProvider {
  id        String   @id @default(uuid())
  provider  String
  sub       String
  payload   Json
  isSafe    Boolean
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([provider, userId])
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String
  permissions String[] @default([])
  createdAt   DateTime @default(now())

  congregation   Congregation @relation(fields: [congregationId], references: [id])
  congregationId Int

  providers    AccountProvider[]
  houseUpdates StatusUpdate[]

  @@unique([email, congregationId])
}
